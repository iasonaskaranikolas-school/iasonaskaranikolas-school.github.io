name: "Clear Cloudflare Cache"
run-name: "Clear Cloudflare Cache"

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '17.x'
      - run: node -e "(async()=>{try{const req=await fetch('https://api.github.com/repos/iasonaskaranikolas-school/iasonaskaranikolas-school.github.io/git/trees/main?recursive=1',{headers:{'content-type':'application/json'}});if(req!==null&&req!==undefined){if(req.ok===true){const res=await req.json();if(res!==null&&res!==undefined){if(res.tree!==null&&res.tree!==undefined){const all_files=await res.tree.filter(v => v.type!==null&&v.type!==undefined&&v.path!==null&&v.path!==undefined&&v.type.toString()==='blob'&&v.path.toString().startsWith('.')===false);if(all_files!==null&&all_files!==undefined){const files=all_files.map(v => v.path!==null&&v.path!==undefined ? 'https://schoolwebsite.jasonkaranik.tk/' + v.path :'');if(files!==null&&files!==undefined){const req2=await fetch('https://eoqb54s80jh905b.m.pipedream.net/' + ${{secrets.CLOUDFLARE_DOMAIN_ID}} + '/purge_cache',{method:'POST',headers:{'authentication':'Bearer ' + ${{secrets.CLOUDFLARE_PURGE_CACHE_API_KEY}},'content-type':'application/json'},body:JSON.stringify({'files':files})});if(req2!==null&&req2!==undefined){return console.log(await req2.json());}}}}}}}}catch(e){return e;}})();"
